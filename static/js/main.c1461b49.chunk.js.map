{"version":3,"sources":["components/Converter.js","App.js","index.js"],"names":["Converter","API_KEY","useState","currencies","setCurrencies","amount","setAmount","pair","setPair","loaded","setLoaded","output","setOutput","useEffect","axios","get","then","cu","data","results","objectKeys","Object","keys","Headers","res","countries","currenciesWithFlags","map","obj","flagFound","find","country","code","currency_name","currencyName","flag","from","to","catch","err","console","log","handlePair","iso","fromTo","currency","curr","className","min","type","value","onChange","e","target","src","alt","width","index","defaultValue","aria-label","onClick","prop","hasOwnProperty","JSON","stringify","isEmpty","result","event","preventDefault","resp","x","toString","replace","values","val","disabled","App","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1461b49.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst Converter = () => {\r\n  const API_KEY = \"f7aad7c5b0fd77488f8b\";\r\n  // List of currencies and their ISO, fetched from fixer API\r\n  const [currencies, setCurrencies] = useState([]);\r\n  // Amount to be converted stored in state\r\n  const [amount, setAmount] = useState(0);\r\n  // The pair to be converted at any given moment, stored as two objects in state\r\n  const [pair, setPair] = useState({});\r\n  // Loader to be displayed before axios realises the fetch from the API's\r\n  const [loaded, setLoaded] = useState(false);\r\n  // The output from the conversion stored in state\r\n  const [output, setOutput] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://free.currconv.com/api/v7/currencies?apiKey=${API_KEY}`)\r\n      .then((cu) => {\r\n        const currencies = cu.data.results;\r\n        const objectKeys = Object.keys(currencies);\r\n        axios\r\n          .get(\r\n            `https://restcountries.eu/rest/v2/all\r\n      `,\r\n            {\r\n              Headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            const countries = res.data;\r\n            let currenciesWithFlags = objectKeys.map((obj) => {\r\n              let flagFound = countries.find(\r\n                (country) => country.currencies[0].code === obj\r\n              );\r\n              if (obj === \"USD\")\r\n                return {\r\n                  obj: \"USD\",\r\n                  currency_name: currencies[\"USD\"].currencyName,\r\n                  flag: \"https://restcountries.eu/data/usa.svg\",\r\n                };\r\n              else if (!flagFound)\r\n                return {\r\n                  ...obj,\r\n                  currency_name: currencies[obj].currencyName,\r\n                  flag: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Blue_question_mark_icon.svg/1200px-Blue_question_mark_icon.svg.png\",\r\n                };\r\n              else if (flagFound)\r\n                return {\r\n                  obj,\r\n                  currency_name: currencies[obj].currencyName,\r\n                  flag: flagFound.flag,\r\n                };\r\n            });\r\n            // Set the initial pair of currencies, I've chosen USD and PLN\r\n            setPair({\r\n              from: currenciesWithFlags[149],\r\n              to: currenciesWithFlags[115],\r\n            });\r\n            // Set the currency list for the user to chose from\r\n            setCurrencies(currenciesWithFlags);\r\n            setLoaded(true);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n  }, []);\r\n  // Add commas to output digits\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n  const converter = (event) => {\r\n    event.preventDefault();\r\n    if (amount) {\r\n      axios\r\n        .get(\r\n          `https://free.currconv.com/api/v7/convert?apiKey=${API_KEY}&q=${pair.from.obj}_${pair.to.obj}&compact=y`\r\n        )\r\n        .then((resp) => {\r\n          console.log();\r\n          setOutput({\r\n            from: pair.from.obj,\r\n            to: pair.to.obj,\r\n            amount: numberWithCommas(amount),\r\n            result: amount * Object.values(resp.data)[0].val,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  function handlePair(iso, fromTo) {\r\n    const currency = currencies.find((curr) => curr.obj === iso);\r\n    console.log(currency);\r\n    if (fromTo === \"from\") setPair({ ...pair, from: currency });\r\n    if (fromTo === \"to\") setPair({ ...pair, to: currency });\r\n  }\r\n  // Check if object is empty by looking at its properties, needed to only display output when necessary.\r\n  function isEmpty(obj) {\r\n    for (let prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        return false;\r\n      }\r\n    }\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  }\r\n  return (\r\n    <div className=\"converter\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h1>Currency Converter</h1>\r\n          {loaded ? (\r\n            <div className=\"block col-md-6 col-lg-6 com-sm-12\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Amount</label>\r\n                <input\r\n                  min=\"0\"\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">From</label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">\r\n                    <img\r\n                      src={pair.from && pair.from.flag}\r\n                      alt={pair.from && pair.from.obj}\r\n                      width=\"50\"\r\n                    />\r\n                  </span>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={(e) => handlePair(e.target.value, \"from\")}\r\n                  >\r\n                    <option value={pair.from && pair.from.obj}>\r\n                      {pair.from && pair.from.currency_name}\r\n                    </option>\r\n                    {currencies.map((currency, index) => {\r\n                      return (\r\n                        <option\r\n                          key={index}\r\n                          defaultValue={currency.obj}\r\n                          value={currency.obj}\r\n                        >\r\n                          {currency.currency_name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3 d-flex justify-content-center\">\r\n                <button\r\n                  className=\"btn btn-swap\"\r\n                  aria-label=\"Swap\"\r\n                  onClick={() => setPair({ from: pair.to, to: pair.from })}\r\n                >\r\n                  <i className=\"bi text-light bi-arrow-repeat\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\" mb-3\">\r\n                <label className=\"form-label\">To</label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">\r\n                    <img\r\n                      src={pair.to && pair.to.flag}\r\n                      width=\"50\"\r\n                      alt={pair.from && pair.from.obj}\r\n                    />\r\n                  </span>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={(e) => handlePair(e.target.value, \"to\")}\r\n                  >\r\n                    <option value={pair.to && pair.to.obj}>\r\n                      {pair.to && pair.to.currency_name}\r\n                    </option>\r\n\r\n                    {currencies.map((currency, index) => {\r\n                      return (\r\n                        <option key={index} value={currency.obj}>\r\n                          {currency.currency_name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              {!isEmpty(output) && (\r\n                <p className=\"text-light\">\r\n                  {output.amount} {output.from} =<br />\r\n                  <span>\r\n                    {output.result} {output.to}\r\n                  </span>\r\n                </p>\r\n              )}\r\n\r\n              <div className=\"mb-3 d-flex justify-content-center\">\r\n                <button\r\n                  onClick={converter}\r\n                  disabled={!amount ? true : false}\r\n                  className=\"btn btn-convert\"\r\n                >\r\n                  Convert\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>Loading ... </div>\r\n          )}\r\n          <p className=\"copyright\">\r\n            Made with <i className=\"bi bi-heart\"></i> By Yanal Shoubaki\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React from \"react\";\nimport \"./scss/style.scss\";\nimport Converter from \"./components/Converter\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nrequire(\"dotenv\").config();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}