{"version":3,"sources":["components/Converter.js","App.js","index.js"],"names":["Converter","useState","currencies","setCurrencies","amount","setAmount","pair","setPair","setLoaded","output","setOutput","useEffect","axios","get","then","cu","data","objectKeys","Object","keys","values","res","countries","currenciesWithFlags","map","obj","flagFound","find","country","code","currency_name","flag","from","to","catch","err","console","log","handlePair","iso","fromTo","currency","curr","className","min","type","value","onChange","e","target","src","width","index","defaultValue","class","aria-label","onClick","prop","hasOwnProperty","JSON","stringify","isEmpty","result","event","preventDefault","resp","x","toString","replace","val","disabled","App","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e0a8d6e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst Converter = () => {\r\n  const API_KEY = \"051518b6bba2ee9c3ba9cc80397a09d4\";\r\n  // List of currencies and their ISO, fetched from fixer API\r\n  const [currencies, setCurrencies] = useState([]);\r\n  // Amount to be converted stored in state\r\n  const [amount, setAmount] = useState(0);\r\n  // The pair to be converted at any given moment, stored as two objects in state\r\n  const [pair, setPair] = useState({});\r\n  // Loader to be displayed before axios realises the fetch from the API's\r\n  const [loaded, setLoaded] = useState(false);\r\n  // The output from the conversion stored in state\r\n  const [output, setOutput] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://api.currencylayer.com/list?access_key=${API_KEY}`)\r\n      .then((cu) => {\r\n        const currencies = cu.data;\r\n        const objectKeys = Object.keys(currencies.currencies);\r\n        const objectValues = Object.values(currencies.currencies);\r\n\r\n        axios\r\n          .get(\r\n            `https://restcountries.eu/rest/v2/all\r\n      `\r\n          )\r\n          .then((res) => {\r\n            const countries = res.data;\r\n            let currenciesWithFlags = objectKeys.map((obj) => {\r\n              let flagFound = countries.find(\r\n                (country) => country.currencies[0].code === obj\r\n              );\r\n              if (obj === \"USD\")\r\n                return {\r\n                  obj: \"USD\",\r\n                  currency_name: currencies.currencies[\"USD\"],\r\n                  flag: \"https://restcountries.eu/data/usa.svg\",\r\n                };\r\n              else if (!flagFound)\r\n                return {\r\n                  ...obj,\r\n                  currency_name: currencies.currencies[obj],\r\n                  flag: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Blue_question_mark_icon.svg/1200px-Blue_question_mark_icon.svg.png\",\r\n                };\r\n              else if (flagFound)\r\n                return {\r\n                  obj,\r\n                  currency_name: currencies.currencies[obj],\r\n                  flag: flagFound.flag,\r\n                };\r\n            });\r\n            // Set the initial pair of currencies, I've chosen USD and PLN\r\n            setPair({\r\n              from: currenciesWithFlags[149],\r\n              to: currenciesWithFlags[115],\r\n            });\r\n            // Set the currency list for the user to chose from\r\n            setCurrencies(currenciesWithFlags);\r\n            setLoaded(true);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n  }, []);\r\n  // Add commas to output digits\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n  const converter = (event) => {\r\n    event.preventDefault();\r\n    if (amount) {\r\n      axios\r\n        .get(\r\n          `https://free.currconv.com/api/v7/convert?apiKey=f7aad7c5b0fd77488f8b&q=${pair.from.obj}_${pair.to.obj}&compact=y`\r\n        )\r\n        .then((resp) => {\r\n          console.log();\r\n          setOutput({\r\n            from: pair.from.obj,\r\n            to: pair.to.obj,\r\n            amount: numberWithCommas(amount),\r\n            result: amount * Object.values(resp.data)[0].val,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  function handlePair(iso, fromTo) {\r\n    const currency = currencies.find((curr) => curr.obj === iso);\r\n    console.log(currency);\r\n    if (fromTo === \"from\") setPair({ ...pair, from: currency });\r\n    if (fromTo === \"to\") setPair({ ...pair, to: currency });\r\n  }\r\n  // Check if object is empty by looking at its properties, needed to only display output when necessary.\r\n  function isEmpty(obj) {\r\n    for (let prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        return false;\r\n      }\r\n    }\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  }\r\n  return (\r\n    <div className=\"converter\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h1>Currency Converter</h1>\r\n          <div className=\"block col-md-6 col-lg-6 com-sm-12\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Amount</label>\r\n              <input\r\n                min=\"0\"\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">From</label>\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-text\">\r\n                  <img src={pair.from && pair.from.flag} width=\"50\" />\r\n                </span>\r\n                <select\r\n                  className=\"form-select\"\r\n                  onChange={(e) => handlePair(e.target.value, \"from\")}\r\n                >\r\n                  <option value={pair.from && pair.from.obj}>\r\n                    {pair.from && pair.from.currency_name}\r\n                  </option>\r\n                  {currencies.map((currency, index) => {\r\n                    return (\r\n                      <option\r\n                        key={index}\r\n                        defaultValue={currency.obj}\r\n                        value={currency.obj}\r\n                      >\r\n                        {currency.currency_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3 d-flex justify-content-center\">\r\n              <button\r\n                class=\"btn btn-swap\"\r\n                aria-label=\"Swap\"\r\n                onClick={() => setPair({ from: pair.to, to: pair.from })}\r\n              >\r\n                <i class=\"bi text-light bi-arrow-repeat\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\" mb-3\">\r\n              <label className=\"form-label\">To</label>\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-text\">\r\n                  <img src={pair.to && pair.to.flag} width=\"50\" />\r\n                </span>\r\n                <select\r\n                  className=\"form-select\"\r\n                  onChange={(e) => handlePair(e.target.value, \"to\")}\r\n                >\r\n                  <option value={pair.to && pair.to.obj}>\r\n                    {pair.to && pair.to.currency_name}\r\n                  </option>\r\n\r\n                  {currencies.map((currency, index) => {\r\n                    return (\r\n                      <option key={index} value={currency.obj}>\r\n                        {currency.currency_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            {!isEmpty(output) && (\r\n              <p className=\"text-light\">\r\n                {output.amount} {output.from} =<br />\r\n                <span>\r\n                  {output.result} {output.to}\r\n                </span>\r\n              </p>\r\n            )}\r\n\r\n            <div className=\"mb-3 d-flex justify-content-center\">\r\n              <button\r\n                onClick={converter}\r\n                disabled={!amount ? true : false}\r\n                class=\"btn btn-convert\"\r\n              >\r\n                Convert\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"copyright\">\r\n            Made with <i className=\"bi bi-heart\"></i> By Yanal Shoubaki\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React from \"react\";\nimport \"./scss/style.scss\";\nimport Converter from \"./components/Converter\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nrequire(\"dotenv\").config();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}